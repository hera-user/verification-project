[tool-version] Z3 4.15.1
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #3 pi
[mk-app] #4 euler
[mk-app] #5 p1
[mk-app] #6 p2
[mk-app] #7 p3
[mk-app] #8 p4
[mk-app] #9 not #8
[mk-app] #10 or #5 #6 #9
[mk-app] #11 not #5
[mk-app] #12 or #11 #7
[mk-app] #13 not #6
[mk-app] #14 not #7
[mk-app] #15 or #13 #14
[mk-app] #16 or #5 #8
[mk-app] #17 or #11 #6
[mk-var] datatype#0 0
[mk-var] datatype#1 1
[mk-app] datatype#2 insert datatype#0 datatype#1
[mk-app] datatype#3 pattern datatype#2
[mk-app] datatype#4 head datatype#2
[mk-app] datatype#5 = datatype#0 datatype#4
[mk-quant] datatype#6 constructor_accessor_axiom 2 datatype#3 datatype#5
[attach-var-names] datatype#6 (;k!0) (;List)
[mk-app] datatype#7 tail datatype#2
[mk-app] datatype#8 = datatype#1 datatype#7
[mk-quant] datatype#9 constructor_accessor_axiom 2 datatype#3 datatype#8
[attach-var-names] datatype#9 (;k!0) (;List)
[mk-var] #18 0
[mk-app] #19 P #18
[mk-var] #20 1
[mk-app] #21 R #20 #18
[mk-app] #22 pattern #21
[mk-quant] #23 inner 1 #22 #21
[attach-var-names] #23 (|Y| ; |Int|)
[mk-app] #24 or #19 #23
[mk-app] #25 pattern #19
[mk-quant] #26 outer 1 #25 #24
[attach-var-names] #26 (|X| ; |Int|)
[mk-app] #27 d
[mk-app] #28 P #27
[mk-app] #29 not #28
[mk-app] #30 c
[mk-app] #31 P #30
[mk-app] #32 not #31
[mk-app] #33 R #30 #30
[mk-app] #34 not #33
[mk-app] #35 bv
[attach-meaning] #35 bv #b0
[mk-var] #36 0
[mk-var] #37 1
[mk-var] #38 2
[mk-var] #39 3
[mk-var] #40 4
[mk-var] #41 5
[mk-var] #42 6
[mk-var] #43 7
[mk-var] #44 8
[mk-var] #45 9
[mk-var] #46 10
[mk-var] #47 11
[mk-var] #48 12
[mk-var] #49 13
[mk-var] #50 14
[mk-app] #51 + #44 #42
[mk-proof] #52 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[mk-proof] #53 asserted #26
[mk-app] #54 = #24 #24
[mk-proof] #55 rewrite #54
[mk-app] #54 = #26 #26
[mk-proof] #55 refl #54
[mk-proof] #54 asserted #29
[mk-app] #55 = #29 #29
[mk-proof] #56 refl #55
[mk-proof] #55 asserted #32
[mk-app] #56 = #32 #32
[mk-proof] #57 refl #56
[mk-proof] #56 asserted #34
[mk-app] #57 = #34 #34
[mk-proof] #58 refl #57
[mk-app] #57 = #24 #24
[mk-proof] #58 rewrite #57
[mk-app] #57 = #26 #26
[mk-proof] #58 refl #57
[mk-app] #57 = #29 #29
[mk-proof] #58 refl #57
[mk-app] #57 = #32 #32
[mk-proof] #58 refl #57
[mk-app] #57 = #34 #34
[mk-proof] #58 refl #57
[mk-app] #57 = #24 #24
[mk-proof] #58 rewrite #57
[mk-app] #57 = #26 #26
[mk-proof] #58 refl #57
[mk-app] #57 = #29 #29
[mk-proof] #58 refl #57
[mk-app] #57 = #32 #32
[mk-proof] #58 refl #57
[mk-app] #57 = #34 #34
[mk-proof] #58 refl #57
[mk-app] #57 = #26 #26
[mk-proof] #58 rewrite #57
[mk-proof] #59 mp #53 #58 #26
[mk-app] #60 = #29 #29
[mk-proof] #61 rewrite #60
[mk-proof] #62 mp #54 #61 #29
[mk-app] #63 = #32 #32
[mk-proof] #64 rewrite #63
[mk-proof] #65 mp #55 #64 #32
[mk-app] #66 = #34 #34
[mk-proof] #67 rewrite #66
[mk-proof] #68 mp #56 #67 #34
[mk-app] #69 = #24 #24
[mk-proof] #70 rewrite #69
[mk-proof] #69 refl #57
[mk-proof] #69 refl #60
[mk-proof] #69 refl #63
[mk-proof] #69 refl #66
[mk-app] #69 = #24 #24
[mk-proof] #70 rewrite #69
[mk-proof] #69 refl #57
[mk-proof] #69 refl #60
[mk-proof] #69 refl #63
[mk-proof] #69 refl #66
[mk-app] #69 = #24 #24
[mk-proof] #70 rewrite #69
[mk-proof] #69 refl #57
[mk-proof] #69 refl #60
[mk-proof] #69 refl #63
[mk-proof] #69 refl #66
[attach-meaning] #35 bv #b0
[attach-enode] #1 0
[attach-enode] #2 0
[mk-app] #69 = #24 #24
[mk-proof] #70 rewrite #69
[mk-proof] #69 refl #57
[mk-proof] #69 refl #60
[mk-proof] #69 refl #63
[mk-proof] #69 refl #66
[begin-check] 0
[mk-app] #69 ~ #19 #19
[mk-proof] #70 refl #69
[mk-app] #71 ~ #21 #21
[mk-proof] #72 refl #71
[mk-lambda] #73 <null> 1 #72
[mk-proof] #74 proof-bind #73
[mk-app] #75 ~ #23 #23
[mk-proof] #76 nnf-pos #74 #75
[mk-app] #77 ~ #24 #24
[mk-proof] #78 monotonicity #70 #76 #77
[mk-lambda] #79 <null> 1 #78
[mk-proof] #80 proof-bind #79
[mk-app] #81 ~ #26 #26
[mk-proof] #82 nnf-pos #80 #81
[mk-proof] #83 mp~ #59 #82 #26
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-app] #84 ~ #29 #29
[mk-proof] #85 refl #84
[mk-proof] #84 refl #60
[mk-app] #84 ~ #32 #32
[mk-proof] #85 refl #84
[mk-proof] #84 refl #63
[mk-app] #84 ~ #34 #34
[mk-proof] #85 refl #84
[mk-proof] #84 refl #66
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-proof] #84 refl #60
[mk-proof] #84 refl #63
[mk-proof] #84 refl #66
[mk-proof] #84 mp #83 #58 #26
[mk-proof] #84 mp #62 #61 #29
[mk-proof] #84 mp #65 #64 #32
[mk-proof] #84 mp #68 #67 #34
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-proof] #84 refl #60
[mk-proof] #84 refl #63
[mk-proof] #84 refl #66
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-proof] #84 refl #60
[mk-proof] #84 refl #63
[mk-proof] #84 refl #66
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-proof] #84 refl #60
[mk-proof] #84 refl #63
[mk-proof] #84 refl #66
[mk-app] #84 = #24 #24
[mk-proof] #85 rewrite #84
[mk-proof] #84 refl #57
[mk-proof] #84 refl #60
[mk-proof] #84 refl #63
[mk-proof] #84 refl #66
[assign] #26 justification -1: 
[attach-enode] #27 0
[attach-enode] #28 0
[assign] (not #28) justification -1: 
[attach-enode] #30 0
[attach-enode] #31 0
[assign] (not #31) justification -1: 
[attach-enode] #33 0
[assign] (not #33) justification -1: 
[mk-app] #84 = #26 #1
[mk-proof] #85 iff-true #83 #84
[mk-app] #86 = #28 #2
[mk-proof] #87 iff-false #62 #86
[mk-app] #88 = #31 #2
[mk-proof] #89 iff-false #65 #88
[mk-app] #90 = #33 #2
[mk-proof] #91 iff-false #68 #90
[eq-expl] #27 root
[new-match] 2541971129 #26 #25 #27 ; #28
[eq-expl] #30 root
[new-match] 1250639430 #26 #25 #30 ; #31
[mk-app] #92 R #27 #18
[mk-app] #93 pattern #92
[mk-quant] #94 inner 1 #93 #92
[attach-var-names] #94 (|Y| ; |Int|)
[mk-app] #95 or #28 #94
[mk-app] #96 = #95 #95
[mk-proof] #97 rewrite #96
[mk-app] #98 not #26
[mk-app] #99 or #98 #28 #94
[mk-app] #100 or #98 #95
[mk-proof] #101 quant-inst #100
[mk-app] #102 = #100 #99
[mk-proof] #103 rewrite #102
[mk-proof] #104 mp #101 #103 #99
[instance] 2541971129 #101 ; 1
[assign] #94 justification -1: 1 -2
[end-of-instance]
[mk-app] #96 R #30 #18
[mk-app] #97 pattern #96
[mk-quant] #105 inner 1 #97 #96
[attach-var-names] #105 (|Y| ; |Int|)
[mk-app] #106 or #31 #105
[mk-app] #107 = #106 #106
[mk-proof] #108 rewrite #107
[mk-app] #109 or #98 #31 #105
[mk-app] #110 or #98 #106
[mk-proof] #111 quant-inst #110
[mk-app] #112 = #110 #109
[mk-proof] #113 rewrite #112
[mk-proof] #114 mp #111 #113 #109
[instance] 1250639430 #111 ; 1
[assign] #105 justification -1: 1 -3
[end-of-instance]
[new-match] 658350913 #105 #97 #30 ; #33 (#30 #30)
[mk-app] #107 = #33 #33
[mk-proof] #108 refl #107
[mk-app] #115 not #105
[mk-app] #116 or #115 #33
[mk-proof] #117 quant-inst #116
[instance] 658350913 #117 ; 2
[end-of-instance]
[mk-proof] #107 unit-resolution #114 #83 #65 #105
[mk-proof] #108 unit-resolution #117 #68 #107 #2
[eof]
