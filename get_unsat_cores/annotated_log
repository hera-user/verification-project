[tool-version] Z3 4.12.1
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #1 true
[mk-app] #2 false
[mk-app] #3 pi
[mk-app] #4 euler
[mk-var] datatype#0 0
[mk-var] datatype#1 1
[mk-app] datatype#2 insert datatype#0 datatype#1
[mk-app] datatype#3 pattern datatype#2
[mk-app] datatype#4 head datatype#2
[mk-app] datatype#5 = datatype#0 datatype#4
[mk-quant] datatype#6 constructor_accessor_axiom 2 datatype#3 datatype#5
[attach-var-names] datatype#6 (;k!0) (;List)
[mk-app] datatype#7 tail datatype#2
[mk-app] datatype#8 = datatype#1 datatype#7
[mk-quant] datatype#9 constructor_accessor_axiom 2 datatype#3 datatype#8
[attach-var-names] datatype#9 (;k!0) (;List)
[mk-app] #5 bv
[attach-meaning] #5 bv #b1
[mk-app] #6 bv
[attach-meaning] #6 bv #b0
[attach-meaning] #5 bv #b1
[attach-meaning] #6 bv #b0
[attach-meaning] #6 bv #b0
[mk-var] #7 0
[mk-var] #8 1
[mk-var] #9 2
[mk-var] #10 3
[mk-var] #11 4
[mk-var] #12 5
[mk-var] #13 6
[mk-var] #14 7
[mk-var] #15 8
[mk-var] #16 9
[mk-var] #17 10
[mk-var] #18 11
[mk-var] #19 12
[mk-var] #20 13
[mk-var] #21 14
[mk-app] #22 + #15 #13
[mk-proof] #23 true-axiom #1
[attach-enode] #1 0
[attach-enode] #2 0
[mk-var] #24 0
[mk-app] #25 P #24
[mk-var] #26 1
[mk-app] #27 R #26 #24
[mk-app] #28 pattern #27
[mk-quant] #29 inner 1 #28 #27
[attach-var-names] #29 (|Y| ; |Int|)
[mk-app] #30 or #25 #29
[mk-app] #31 pattern #25
[mk-quant] #32 outer 1 #31 #30
[attach-var-names] #32 (|X| ; |Int|)
[mk-app] #33 assertion_0
[mk-app] #34 => #33 #32
[mk-proof] #35 asserted #34
[mk-app] #36 = #30 #30
[mk-proof] #37 rewrite #36
[mk-app] #36 not #33
[mk-app] #37 or #36 #32
[inst-discovered] theory-solving 0 basic# ; #34
[mk-app] #38 = #34 #37
[instance] 0 #38
[attach-enode] #38 0
[end-of-instance]
[mk-app] #38 = #34 #37
[mk-proof] #39 rewrite #38
[mk-proof] #40 mp #35 #39 #37
[mk-app] #41 d
[mk-app] #42 P #41
[mk-app] #43 not #42
[mk-app] #44 assertion_1
[mk-app] #45 => #44 #43
[mk-proof] #46 asserted #45
[mk-app] #47 not #44
[mk-app] #48 or #47 #43
[inst-discovered] theory-solving 0 basic# ; #45
[mk-app] #49 = #45 #48
[instance] 0 #49
[attach-enode] #49 0
[end-of-instance]
[mk-app] #49 = #45 #48
[mk-proof] #50 rewrite #49
[mk-proof] #51 mp #46 #50 #48
[mk-app] #52 c
[mk-app] #53 P #52
[mk-app] #54 not #53
[mk-app] #55 assertion_2
[mk-app] #56 => #55 #54
[mk-proof] #57 asserted #56
[mk-app] #58 not #55
[mk-app] #59 or #58 #54
[inst-discovered] theory-solving 0 basic# ; #56
[mk-app] #60 = #56 #59
[instance] 0 #60
[attach-enode] #60 0
[end-of-instance]
[mk-app] #60 = #56 #59
[mk-proof] #61 rewrite #60
[mk-proof] #62 mp #57 #61 #59
[mk-app] #63 R #52 #52
[mk-app] #64 not #63
[mk-app] #65 assertion_3
[mk-app] #66 => #65 #64
[mk-proof] #67 asserted #66
[mk-app] #68 not #65
[mk-app] #69 or #68 #64
[inst-discovered] theory-solving 0 basic# ; #66
[mk-app] #70 = #66 #69
[instance] 0 #70
[attach-enode] #70 0
[end-of-instance]
[mk-app] #70 = #66 #69
[mk-proof] #71 rewrite #70
[mk-proof] #72 mp #67 #71 #69
[begin-check] 0
[mk-app] #73 ~ #36 #36
[mk-proof] #74 refl #73
[mk-app] #75 ~ #25 #25
[mk-proof] #76 refl #75
[mk-app] #77 ~ #27 #27
[mk-proof] #78 refl #77
[mk-lambda] #79 <null> 1 #78
[mk-proof] #80 proof-bind #79
[mk-app] #81 ~ #29 #29
[mk-proof] #82 nnf-pos #80 #81
[mk-app] #83 ~ #30 #30
[mk-proof] #84 monotonicity #76 #82 #83
[mk-lambda] #85 <null> 1 #84
[mk-proof] #86 proof-bind #85
[mk-app] #87 ~ #32 #32
[mk-proof] #88 nnf-pos #86 #87
[mk-app] #89 ~ #37 #37
[mk-proof] #90 monotonicity #74 #88 #89
[mk-proof] #91 mp~ #40 #90 #37
[mk-app] #92 = #37 #37
[mk-proof] #93 refl #92
[mk-app] #92 ~ #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 ~ #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 ~ #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #30 #30
[mk-proof] #93 rewrite #92
[mk-app] #92 = #37 #37
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #91 #93 #37
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #37 #37
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #91 #93 #37
[mk-app] #92 = #48 #48
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #51 #93 #48
[mk-app] #92 = #59 #59
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #62 #93 #59
[mk-app] #92 = #69 #69
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #72 #93 #69
[mk-app] #92 = #30 #30
[mk-proof] #93 rewrite #92
[mk-app] #92 = #37 #37
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #91 #93 #37
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #30 #30
[mk-proof] #93 rewrite #92
[mk-app] #92 = #37 #37
[mk-proof] #93 rewrite #92
[mk-proof] #94 mp #91 #93 #37
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #37 #37
[mk-proof] #93 refl #92
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[mk-app] #92 = #37 #37
[mk-proof] #93 refl #92
[mk-app] #92 = #48 #48
[mk-proof] #93 refl #92
[mk-app] #92 = #59 #59
[mk-proof] #93 refl #92
[mk-app] #92 = #69 #69
[mk-proof] #93 refl #92
[attach-enode] #41 0
[attach-enode] #42 0
[attach-enode] #52 0
[attach-enode] #53 0
[attach-enode] #63 0
[mk-app] #92 = #37 #1
[mk-proof] #93 iff-true #91 #92
[mk-app] #94 = #48 #1
[mk-proof] #95 iff-true #51 #94
[mk-app] #96 = #59 #1
[mk-proof] #97 iff-true #62 #96
[mk-app] #98 = #69 #1
[mk-proof] #99 iff-true #72 #98
[push] 0
[mk-proof] #100 asserted #33
[assign] #33 justification -1: 
[mk-proof] #101 asserted #44
[assign] #44 justification -1: 
[mk-proof] #102 asserted #55
[assign] #55 justification -1: 
[mk-proof] #103 asserted #65
[assign] #65 justification -1: 
[assign] #32 clause 2 -1
[assign] (not #42) clause -4 -3
[assign] (not #53) clause -6 -5
[assign] (not #63) clause -8 -7
[eq-expl] #41 root
[new-match] 0x3b5598e8 #32 #31 #41 ; #42
[eq-expl] #52 root
[new-match] 0x3b559918 #32 #31 #52 ; #53
[mk-app] #104 R #41 #24
[mk-app] #105 pattern #104
[mk-quant] #106 inner 1 #105 #104
[attach-var-names] #106 (|Y| ; |Int|)
[mk-app] #107 or #42 #106
[mk-app] #108 = #107 #107
[mk-proof] #109 rewrite #108
[mk-app] #110 not #32
[mk-app] #111 or #110 #42 #106
[mk-app] #112 or #110 #107
[mk-proof] #113 quant-inst #112
[mk-app] #114 = #112 #111
[mk-proof] #115 rewrite #114
[mk-proof] #116 mp #113 #115 #111
[instance] 0x3b5598e8 #113 ; 1
[assign] #106 justification -1: 2 -4
[end-of-instance]
[mk-app] #108 R #52 #24
[mk-app] #109 pattern #108
[mk-quant] #117 inner 1 #109 #108
[attach-var-names] #117 (|Y| ; |Int|)
[mk-app] #118 or #53 #117
[mk-app] #119 = #118 #118
[mk-proof] #120 rewrite #119
[mk-app] #121 or #110 #53 #117
[mk-app] #122 or #110 #118
[mk-proof] #123 quant-inst #122
[mk-app] #124 = #122 #121
[mk-proof] #125 rewrite #124
[mk-proof] #126 mp #123 #125 #121
[instance] 0x3b559918 #123 ; 1
[assign] #117 justification -1: 2 -6
[end-of-instance]
[new-match] 0x3b559ae8 #117 #109 #52 ; #63 (#52 #52)
[mk-app] #119 = #63 #63
[mk-proof] #120 refl #119
[mk-app] #127 not #117
[mk-app] #128 or #127 #63
[mk-proof] #129 quant-inst #128
[instance] 0x3b559ae8 #129 ; 2
[end-of-instance]
[mk-proof] #119 unit-resolution #72 #103 #64
[mk-proof] #120 unit-resolution #91 #100 #32
[mk-proof] #130 unit-resolution #62 #102 #54
[mk-proof] #131 unit-resolution #126 #120 #130 #117
[mk-proof] #132 unit-resolution #129 #119 #131 #2
[pop] 1 1
[mk-app] #3 string
[mk-app] #4 string
[mk-app] #3 string
[mk-app] #4 string
[mk-app] #3 string
[mk-app] #4 string
[eof]
